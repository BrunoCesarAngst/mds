@startuml class

package Util {
  class Request {
    #request: {}
    +get(url)
  }
}

package Client {
  
  interface IInfoPraiaData {
    [key: String]: number
  }

  interface IInfoPonto {
    tempo: String
    alturaOnda: IInfoPraiaData
    direçãoOnda: IInfoPraiaData
    alturaOndulação: IInfoPraiaData
    direçãoOndulação: IInfoPraiaData
    períodoOndulação: IInfoPraiaData
    velocidadeVento: IInfoPraiaData
    direçãoVento: IInfoPraiaData
  }

  interface IInfoPontoPrevisãoResponse {
  hours: IInfoPonto[]

  interface IPrevisãoPonto {
    tempo: String
    alturaOnda: Number
    direçãoOnda: Number
    alturaOndulação: Number
    direçãoOndulação: Number
    períodoOndulação: Number
    velocidadeVento: Number
    direçãoVento: Number
  }
  
  class ApiInfoPraia {
    -parameters: []
    #request: Class Request
    +buscarPonto(lat, lng)<IPrevisãoPonto>
    +PontoÉVálido(point: <IInfoPonto>): B
  }
  note top: parameters: [alturaOnda, direçãoOnda, alturaOndulação,\n direçãoOndulação, períodoOndulação,\n velocidadeVento, direçãoVento]

  ApiInfoPraia -> Request
  ApiInfoPraia *- IPrevisãoPonto
}
package Models {

  interface IUser {
    id: String
    name: String
    email: String
    password: String
  }

  interface ModelUser extends IUser {
    
  }

  enum Position {
    N
    S
    L
    O
  }

  interface IPraia {
    -id: Integer
    -name: String
    -position[1]: Position
    -lat: Integer
    -lng: Integer
    -user: String
  }

  IPraia -> Position

  interface PraiaModel extends IPraia

  class Praia implements PraiaModel
}
package Controllers {}
package Middlewares {}
package Services {}

@enduml